labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal)) +
facet_grid(. ~ state) +
geom_text(aes(label=county, size=1)) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal)) +
facet_grid(. ~ state) +
geom_text(aes(label=if(poptotol>1000000, county), size=1))) +
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal)) +
facet_grid(. ~ state) +
geom_text(aes(label=ifelse(poptotol>1000000, county, ""), size=1))) +
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal)) +
facet_grid(. ~ state) +
geom_text(aes(label=ifelse(poptotol>1000000, county, ""))) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal)) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
?geom_point
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.05) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, show.legend = TRUE) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_point(label=county) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(label=county, size=2) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty, county)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(label=county, size=2) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
View(midwest)
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty, county)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(aes(label=county, size=2)) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(aes(label=county, size=2)) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(ifelse(poptotal>1000000, aes(label=county, size=2), "")) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(if(poptotal>100000, aes(label=county, size=2))) +
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(if(poptotal>100000 aes(label=county, size=2))) +
p2 <- ggplot(midwest, aes(percollege, percbelowpoverty)) +
geom_point(aes(col=state, size=poptotal), alpha=0.40, na.rm=TRUE) +
geom_text(aes(label=county, size=2)) +
facet_grid(. ~ state) +
labs(x="Percent College Educated", y="Percent Below Poverty", title="College Education vs. Poverty in Midwestern US")
p2 <- ggplotly(p2)
p2
p2
install.packages("shiny")
library(shiny)
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
data(midwest)
data("midwest")
data("midwest")
data("midwest")
search()
library(data.table, ggplot2)
search()
library(ggplot2)
search()
library(datasets)
data("midwest")
search()
str(midwest)
summary(midwest)
setDT(midwest)
unique(midwest$state)
shiny::runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
range(midwest$poptotal)
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
library(shinythemes)
install.packages(shinythemes)
install.packages("shinythemes")
library(shinythemes)
ls(package:shinytheme())
names(package:shinytheme())
names(package::shinytheme())
?shinytheme
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
midwest[state=="IN" && poptotal>250000]
midwest[state=="IL" && poptotal>250000]
midwest[state=="IL"]
midwest[state=="IL", poptotal]
midwest[poptotal>500000, poptotal]
midwest[poptotal>500000 && state="IL", poptotal]
midwest[poptotal>500000 && state=="IL", poptotal]
midwest[poptotal>500000, .(state, poptotal)]
midwest[poptotal>500000, .(state, poptotal)][state=="IL"]
midwest[poptotal>500000 & state=="IL", .(state, poptotal)]
midwest[poptotal>500000, .(state, poptotal)]
midwest[state=="IL" & poptotal > 500000, .(area, poptotal, percollege)]
midwest[state=="IL" & poptotal > 500000, .(state, county, area, poptotal, percollege)]
midwest[state=="IL" & poptotal > 500000, .(state, county, area, poptotal, percollege, percpovertyknown, percbelowpoverty)]
ggplot(data=mwState, aes(x=county, y=poptotal)) +
geom_point(aes(size=area), alpha=0.4, na.rm=TRUE)
mwStateTest <- midwest[state==input$state & poptotal > input$countyPop, .(state, county, area, poptotal, percollege, percbelowpoverty, percwhite, percblack, percamerindan, percasian, percother)]
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
plot(midwest$county, midwest$poptotal, xlab="County", ylab="Population")
plot(midwest$county, midwest$poptotal, xlab="County", ylab="Population", na.rm=TRUE)
midwest[is.na(poptotal)]
midwest[is.na(county)]
View(midwest)
mwTest <- midwest[state=="IL" & poptotal > 100000, .(state, county, area, poptotal, percollege, percbelowpoverty, percwhite, percblack, percamerindan, percasian, percother)]
View(mwTest)
plot(mwTest$county, mwTest$poptotal, xlab="County", ylab="Population")
plot(mwTest$county, mwTest$poptotal, xlab="County", ylab="Population", xlim=50)
plot(mwTest$poptotal, mwTest$county, xlab="Pop", ylab="County")
str(mwTest)
plot(as.factor(mwTest$county), mwTest$poptotal, xlab="County", ylab="Population")
plot(as.factor(mwTest$county), mwTest$poptotal, xlab="County", ylab="Population", pch=10)
plot(as.factor(mwTest$county), mwTest$poptotal, xlab="County", ylab="Population", pch=1)
xyplot(as.factor(mwTest$county), mwTest$poptotal, xlab="County", ylab="Population")
plot(mwTest$poptotal, as.factor(mwTest$county), xlab="County", ylab="Population", pch=1)
xyplot(as.factor(mwTest$county), mwTest$poptotal, xlab="County", ylab="Population")
plot(as.factor(mwTest$county), mwTest$poptotal, xlab="County", ylab="Population", pch=1)
?plot
plot(as.factor(mwTest$county), mwTest$poptotal, xlab="County", ylab="Population", type="p")
?graphics
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
melt(mwTest[, c("percwhite", "percblack", "percamerindan", "percasian", "percother")], id.vars = 1)
melt(mwTest[, c("county", "percwhite", "percblack", "percamerindan", "percasian", "percother")], id.vars = 1)
melt(mwTest[, c("county", "percwhite", "percblack", "percamerindan", "percasian", "percother")], id.vars = 1)[county=="COOK"]
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
mwrTest <- melt(mwTest[, c("county", "percwhite", "percblack", "percamerindan", "percasian", "percother")], id.vars = 1)
ggplot(mwrTest, aes(x=county, y=value)) +
geom_bar(aes(fill=variable), stat="identity") +
labs(x="County", y="Percent of Population", title="Demographic Info by County")
ggplot(mwrTest, aes(x=county, y=value)) +
geom_bar(aes(fill=variable), stat="identity") +
labs(x="County", y="Percent of Population", title="Demographic Info by County") +
coord_polar("y", start=0)
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
library(tidyr)
gather(mwTest, race, percent, county, percwhite, percblack, percamerindan, percasian, percother, factor_key = TRUE)
gather(mwTest, race, percent, percwhite, percblack, percamerindan, percasian, percother, factor_key = TRUE)
gather(mwTest, race, percent, percwhite, percblack, percamerindan, percasian, percother, factor_key = TRUE)[county=="COOK"]
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
mwrTest <- gather(mwTest, demo_race, percent, percwhite, percblack, percamerindan, percasian, percother, factor_key = TRUE)
View(mwrTest)
order(mwrTest$percent, decreasing = TRUE)
View(mwTest)
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
head(mwrTest)
class(mwrTest)
mwrTest[order(2, 7,8)]
mwrTest[order(-percent)]
mwrTest[-order(percent)]
order(-mwrTest$percent)
mwrTest[order(-mwrTest$percent)]
mwrTest[order(-mwrTest$percent),]
mwrTest[order(county, demo_race, -mwrTest$percent),]
mwrTest[with(mwrTest, order(c("county", "demo_race", -"percent"))),]
mwrTest[with(mwrTest, order(c("county", "demo_race", "percent"))),]
with(mwrTest, order(county, demo_race, percent))
mwrTest[with(mwrTest, order(county, demo_race, percent)),]
mwrTest <- mwrTest[with(mwrTest, order(county, demo_race, percent)),]
View(mwrTest)
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
mwrTest <- mwrTest[with(mwrTest, order(county, -percent)),]
View(mwrTest)
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
str(mwrTest)
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
data("midwest")
names("midwest")
str("midwest")
library("datasets")
data("midwest")
names("midwest")
str("midwest")
data(midwest)
names(midwest)
str(midwest)
data(midwest)
names(midwest[1:16])
str(midwest[1:16])
data(midwest)
names(midwest[1:5, 12:16])
str(midwest[1:5, 12:16])
data(midwest)
names(midwest[c(1:5, 12:16)])
str(midwest[c(1:5, 12:16)])
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
# Chunk 1
data(midwest)
str(midwest[c(1:5, 12:16)])
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
search()
shiny::runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
search()
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
??gather
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/test-shiny')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
library("markdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("rmarkdown", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
library("knitr", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
shiny::runApp('CourseraDataSc/9.DDP/My-Shiny-App')
search()
package:datasets
?package:datasets
?datasets
library(help="datasets")
data("presidents")
str(presidents)
head(presidents)
names(presidents)
rm(presidents)
data(state)
names(state.center)
names(state)
data(rivers)
str(rivers)
rm(rivers)
data("iris")
str(iris)
rm(iris)
data("discoveries")
str(discoveries)
rm(discoveries)
data("crimtab")
str(crimtab)
rm(crimtab)
data("AirPassengers")
str(AirPassengers)
rm(AirPassengers)
?data.table
??data.table
data("PlantGrowth")
str(PlantGrowth)
rm(PlantGrowth)
data("uspop")
str(uspop)
rm(uspop)
data("ChickWeight")
str(ChickWeight)
rm(ChickWeight)
search()
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
data("midwest")
search()
str(midwest )
mwTest <-         midwest[state=="IL" & poptotal > 300000, .(state, county, area, poptotal, percwhite, percblack, percamerindan, percasian, percother)]
search()
library(data.table)
mwTest <-         midwest[state=="IL" & poptotal > 300000, .(state, county, area, poptotal, percwhite, percblack, percamerindan, percasian, percother)]
mwTest <-         midwest[state=="IL" & poptotal > 300000, c(state, county, area, poptotal, percwhite, percblack, percamerindan, percasian, percother)]
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
pkgs = c("ggplot2")
lapply(pkgs, require, character.only=TRUE)
data("midwest")
str(midwest[c(1:5, 12:16)])
getwd()
# Chunk 1: showData
pkgs = c("ggplot2")
lapply(pkgs, require, character.only=TRUE)
data("midwest")
str(midwest[c(1:5, 12:16)])
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
install.packages('rsconnect')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='varunpoddar', token='116CDF4F771DF34A5D2E2796AA7DE230', secret='6ROWZWONhwjcBbHx8ilJCilLcpqtYS7Cw2abdhSO')
shiny::runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
search(0)
search()
with(data=midwest, xyplot(x=county,y=poptotal/1000))
with(data=midwest, xyplot(x=area,y=poptotal/1000))
str(midwwest)
str(midwest)
with(data=midwest, xyplot(x=area,y=poptotal))
with(data=midwest, xyplot(area,poptotal))
with(data=midwest, xyplot(poptotal))
xyplot(poptotal, data=midwest)
xyplot(midwest$poptotal, data=midwest)
class(midwest)
search()
shiny::runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
shiny::runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
?datasets
library(help="datasets")
data("HairEyeColor")
str(HairEyeColor)
view(HairEyeColor)
HairEyeColor
rm(HairEyeColor)
data("ToothGrowth")
str(ToothGrowth)
data("attitude")
data(islands)
data(rivers)
str(rivers)
rivers
data(trees)
data(women)
data("midwest")
str(midwest[c(1:5, 12:16)])
View(midwest)
data("midwest")
mwData <- midwest[c(1:5, 12:16)]
View(mwData)
write.csv(mwData, file="mwDataSubset.csv")
rm(mwData)
rm(midwest)
getwd()
file.path(getwd(), "mwDataSubset.csv")
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
shiny::runApp('CourseraDataSc/9.DDP/ddp-shiny-app')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
library(datasets)
names(datasets)
library(help = "datasets")
data(iris)
str(iris)
data("occupationalStatus")
rm(occupationalStatus)
data(swiss)
str(swiss)
?swiss
data(mtcars)
str(mtcars)
unique(mtcars$cyl)
unique(mtcars$hp)
range(mtcars$hp)
runApp('CourseraDataSc/9.DDP/shiny-app-2')
names(mtcars)
mtcarsTest <- subset(mtcars, cyl==4 & hp>=150 & am==1)
mtcarsTest <- subset(mtcars, cyl==4 & hp>=150 & am==0)
mtcarsTest <- subset(mtcars, cyl==4 & hp>=50 & am==0)
View(mtcarsTest)
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
head(mtcars)
View(mtcars)
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
names(mtcars)
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
runApp('CourseraDataSc/9.DDP/shiny-app-2')
library(datasets)
data("midwest")
mtcars$Car <- rownames(mtcars)
names(mtcars) <- c("MPG", "Cylinders", "Displacement", "HP", "Drat", "Weight", "Qsec", "VS", "AM", "Gears", "Carburetors", "Car")
str(midwest[12, 1:11])
library(datasets)
data("midwest")
mtcars$Car <- rownames(mtcars)
names(mtcars) <- c("MPG", "Cylinders", "Displacement", "HP", "Drat", "Weight", "Qsec", "VS", "AM", "Gears", "Carburetors", "Car")
str(midwest[12, 1:11])
library(datasets)
data("mtcars")
mtcars$Car <- rownames(mtcars)
names(mtcars) <- c("MPG", "Cylinders", "Displacement", "HP", "Drat", "Weight", "Qsec", "VS", "AM", "Gears", "Carburetors", "Car")
str(mtcars[12, 1:11])
library(datasets)
data("mtcars")
str(mtcars)
runApp('CourseraDataSc/9.DDP/shiny-app-2')
